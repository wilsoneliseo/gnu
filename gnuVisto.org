* SIN CLASIFICAR
  + nproc :: muestra el numero de procesadores de la computadora.

  + su -c "rm archivo.txt" :: ejecuta como administrador el comando rm
    y luego vuelve al usuario normal

  + df -h :: muestra información de los discos. La opcion -h indica
    "lectura humana"

  + ncdu :: espacio ocupado por archivo, interactivo

  + du -h :: muestra ocupación de espacio por carpeta. -h indica
             lectura humana de los numeros.

  + du -hd 1 ~/Escritorio :: opcion -d especifica nivel de profundidad

  + du -ah --time ~/Escritorio :: tamaños y ultimas fechas de
       modificacion

  + sed 's/^/---/' archivo.txt :: coloca tres giones al principio de
       cada linea de 'archivo.txt'

  + sed -n '20,30p' archivo.txt :: muestra lineas 20 al 30 de
       'archivo.txt' la 'p' indica printer

  + testdisk :: recuperar archivos eliminados con particiones para
                windows. Mas info [fn:1]

  + photorec :: recuperar archivos multimedia. Se instala junto con
                testdisk.

  + uname -m :: muestra informacion del nucleo del sistema

  + lsb_release -a :: muestra informacion de la distribucion del
                      sistema

  + w, who, user, finger :: cualquiera de estos cuatro comandos lista
       los usuarios que estan conectados al sistema.

  + cat /etc/passwd :: ver el total de usuarios (conectados o no)

  + sudo passwd <nombreUsuario> :: logeado como usario administrador,
       permite modificar la contraseña de otro usuario.

  + Ctr + Shift + U <num> :: para ingresar un caracter, en la consola,
       ascci que corresponde al numero hexadecimal <num> 

  + man hier :: informacion sobre el sistema de archivos GNU/Linux


* COMPILADOR GCC
** explicacion de comando para crear ejecutable en c++
   El comando basico es:
          g++ -Wall -std=c++14 -o simple simple.cpp

   Este comando tiene cinco partes:
      1. g++ : invoca gcc para construir el proceso. Este comando
         corre el preprocesador, seguido por el compilador, y
         finalmente el enlazado para producir el programa
         ejecutable. Incluso aunque el preprocesador y enlazado estan
         involucrados aqui, nosotros generalmente simplificamos
         diciendo que estamos "compilado el programa".
      2. -Wall : significa "advertir de todo" del ingles "warn all" y
         controlar el compilador para que sea muy estricto cuando este
         compilando el codigo fuente. Va mas alla, comprobando que el
         programa este bien-formado, c++ tambien advierte de codigo
         construido que muchos programadores consideran cuestionables
         porque codigo de esta naturaleza a menudo contien errores. La
         parte -Wall quere decir "Advertir sobre tantos posibles
         problemas como sea posible". Debe compilar todos los
         programas de C ++ con esta directiva porque habilita el
         compilador para atrapar muchos errores descuidados del
         programador que de otra manera podrían pasar
         desapercibidos. Uso de la directiva -Wall es deseable para
         todos los programadores de C++ de novato a experto.
      3. -std=c++14 : Esta opcion ordena al compilador a procesar el
         codigo fuente de c++ de acuerdo con las reglas del estandar
         c++14, el cual la organizacion internacional de estandares
         (ISO) adopto en 2014. Ya que este estandar es relativamente
         nuevo, omitir esta parte del comando, g++ asume que el
         programador esta escribiendo el codigo fuente bajo las reglas
         del viejo 1998 ISO C++ estandar, generalmente referido como
         C++98.
      4. -o simple: Especifica el nombre del programa ejecutable. El
         nombre deseado aparece despues del "-o", así que nuestro
         ejecutable va a nombrarse como "simple.exe" en MS-Windows. En
         Mac y GNU solamente "simple" sin extension. Si el codigo c++
         no contiene erreores, el compilador va a producir el archivo
         ejecutable.
      5. simple.cpp : Especifica el nombre del codigo fuente de C++
         que deseamos compilar.  Aquí el archivo simple.cpp debe
         residir en nuestro directoria actual de trabajo, para que el
         compilador lo procece.

   Los compiladores más recientes pueden verificar mas a fondo la
   validez de los programas C ++. Los compiladores modernos hacen un
   mejor trabajo de detectar errores comunes de programación.  La
   directiva -Wall es opcional porque a veces los desarrolladores
   deben trabajar con antiguo código fuente C ++. El código se
   escribió originalmente en C++ más relajado, pero puede que no valga
   la pena reescribir el código para estándares modernos. Si este
   código antiguo ha demostrado ser fiable, puede ser compilado sin
   los controles más estrictos. Todo nuevo código, sin embargo, debe
   tomar ventaja De las capacidades de comprobación más nuevas y
   mejores del compilador C ++ más actualizado; Por lo tanto, siempre
   utilice -Wall en la línea de comandos del compilador para el código
   que usted escriba.

* directivas del preprocesador
  #ifdef IDENTIFICADOR  
  #ifndef IDENTIFICADOR  
  
  son equivalentes a: 
  #if defined IDENTIFICADOR  
  #if !defined IDENTIFICADOR 


* Footnotes

[fn:1] Visitar
http://kuboosoft.blogspot.com/2013/03/como-recuperar-archivos-eliminados-en.html
